on:
  push:
    branches:
      - master
name: build
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read docker-compose.yml content
        run: |
          content=$(cat docker-compose.yml)
          content=${content//$'\n'/\\n}
          content=${content//$'"'/\\\"}
          echo "::set-output name=content::$content"
        id: docker-compose

      - name: Deploy
        uses: appleboy/ssh-action@master
        env:
          SSL_CERTIFICATE: ${{secrets.SSL_CERTIFICATE}}
          SSL_CA_BUNDLE: ${{secrets.SSL_CA_BUNDLE}}
          SSL_KEY: ${{secrets.SSL_KEY}}
        with:
          envs: SSL_CERTIFICATE, SSL_CA_BUNDLE, SSL_KEY
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo -e "$SSL_CERTIFICATE" > cert.crt
            echo -e "$SSL_CA_BUNDLE" > cert.ca-bundle
            echo -e "$SSL_KEY" > cert.key
            echo -e "${{ steps.docker-compose.outputs.content }}" > docker-compose.yml

            docker-compose pull
            docker-compose up --force-recreate --remove-orphans -d
