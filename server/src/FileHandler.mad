import type { IncomingRequest } from "MadServer"
import type { Header, Response } from "Http"
import type { Wish } from "Wish"

import { mapRej } from "Wish"
import { Just } from "Maybe"
import { mapRej } from "Wish"
import { Header } from "Http"
import File from "File"
import Process from "Process"
import String from "String"
import List from "List"


buildHeaders :: IncomingRequest -> List Header
buildHeaders = (req) => pipe(
  .url,
  String.split("."),
  List.last,
  where {
    Just("svg") =>
      [Header("Content-Type", "image/svg+xml")]

    _ =>
      []
  }
)(req)


fileHandler :: IncomingRequest -> Wish (Response String) (Response String)
export fileHandler = (req) => pipe(
  (cwd) => `${cwd}/build/public${req.url}`,
  File.read,
  map((content) => ({
    status: 200,
    body: content,
    headers: buildHeaders(req)
  })),
  mapRej(() => ({ status: 404, body: `{ "error": "file not found" }`, headers: [] }))
)(Process.getCurrentWorkingDirectory())
