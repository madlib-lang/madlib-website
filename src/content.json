{
  "title": "Madlib",
  "header": {
    "content": "![madlib logo](/assets/logo.svg)\n> A compile-to-JS language designed to make writing code a **delight**"
  },
  "sections": [
    {
      "title": "A functional language with familiar syntax",
      "content": "Madlib is a pragmatic functional programming language which compiles to JavaScript. It is similar in syntax to JavaScript (with a little bit of Haskell). Madlib embraces function composition, automatic currying, and monadic control structures."
    },
    {
      "title": "Safety, Types and Pragmatism",
      "content": "Mutation is only possible in explicit safe places. Madlib is powered by the [Hindley-Milner type system](https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system), which means that it has powerful type inference and doesn't need annotations in most cases. Madlib also allows for unsafe native JavaScript wrapped in 'the fence', i.e. `#- Math.random() -#` which gives developers a potential escape hatch (but without type inference)."
    }
  ]
}
