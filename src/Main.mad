import {
  Subscription,
  View,
  a,
  className,
  div,
  h2,
  footer,
  header,
  href,
  img,
  main,
  text,
  renderWithSubscriptions,
  section,
  span,
  src
} from "MadUI"
import { Parser, field, list, map1, map2, map3, parse, string } from "Json"
import { Left, Right } from "Either"
import { renderMarkdown } from "MarkdownRenderer"
import {} from "List"
import { get, Response } from "Http"
import { fulfill } from "Wish"
import contentJson from "./content.json"
import { TextData } from "Data"
import IO from "IO"

alias Section = {
  title   :: String,
  content :: String
}

alias Header = {
  content :: String
}

alias Content = {
  title    :: String,
  header   :: Header,
  sections :: List Section
}

alias State = {
  content :: Content,
  loading :: Boolean
}

sectionParser :: Parser Section
sectionParser = map2(
  (title, content) => ({ title, content }),
  field("title", string),
  field("content", string)
)

headerParser :: Parser Header
headerParser = map1(
  (content) => ({ content }),
  field("content", string)
)

contentParser :: Parser Content
contentParser = map3(
  (title, headerContent, sections) => ({ title, header: headerContent, sections }),
  field("title", string),
  field("header", headerParser),
  field("sections", list(sectionParser))
)

DEFAULT_CONTENT = {
  title: "Madlib",
  header: { content: "" },
  sections: []
}

INTIAL_STATE = { content: DEFAULT_CONTENT, loading: true }

SectionView :: View Section
SectionView = (s) =>
  <section className="website__section">
    <h2>{s.title}</h2>
    {renderMarkdown(s.content)}
  </section>

Home :: View State
Home = (state) =>
  <div className="website">
    <header className="website__header">
      {renderMarkdown(state.content.header.content)}
    </header>
    <main className="website__main">
      {map(SectionView, state.content.sections)}
    </main>
    <footer className="website__footer">
      <span className="footer__power">
        powered by <a href="https://github.com/madlib-lang/madlib-website" className="footer__link">Madlib</a>
      </span>
    </footer>
  </div>

SplashScreen :: View ()
SplashScreen = (_) =>
  <div className="splash-screen">
    <img className="splash-screen__logo" src="/assets/logo.svg" />
  </div>

Website :: View State
Website = (state) => state.loading
  ? SplashScreen(())
  : Home(state)

loadContentSub :: Subscription State
loadContentSub = (dispatch) => pipe(
  get,
  map(where is Response { data: TextData t }: parse(contentParser, t)),
  map(where
    is Right c: c
    is Left _ : DEFAULT_CONTENT
  ),
  fulfill(
    IO.log,
    (c) => dispatch((s) => ({ ...s, content: c, loading: false }))
  )
)("/content.json")

renderWithSubscriptions(Website, INTIAL_STATE, [loadContentSub], "app")
