import type { Maybe } from "Maybe"
import type { Config } from "MadMarkdownRenderer"
import type { Element } from "MadUI"

import type { DocsPageWithLinks, State } from "@client/State"

import { Just, Nothing } from "Maybe"
import { className, code, div, empty, h2, link, to } from "MadUI"
import { strata } from "Strata"

import { renderMarkdown } from "@client/Markdown"

stratum = strata("documentation-page")

alias MaybeLink = Maybe { href :: String, text :: String }

NextPageLink :: String -> MaybeLink -> MaybeLink -> Element State
NextPageLink = (extraLabel, prev, next) => {
  classy = stratum.em("nav-item")
  return where(#[prev, next]) {
    
    #[Just(_), Just({ href })] =>
      <link className={classy(["next"])} to={href}>
        {extraLabel}
      </link>

    #[Nothing, Just({ href })] =>
      <link className={classy(["next", "solo"])} to={href}>
        {extraLabel}
      </link>
    #[Nothing, Nothing] =>
      <empty  />

  }
}
PrevPageLink :: String -> MaybeLink -> MaybeLink -> Element State
PrevPageLink = (extraLabel, prev, next) => {
  classy = stratum.em("nav-item")
  return where(#[prev, next]) {

    #[Just({ href }), Just(_)] =>
      <link className={classy(["previous"])} to={href}>
        {extraLabel}
      </link>

    #[Just({ href }), Nothing] =>
      <link className={classy(["previous", "solo"])} to={href}>
        {extraLabel}
      </link>

    #[Nothing, Nothing] =>
      <empty  />
  }
}

SurroundingPageLink :: String -> String -> Maybe { href :: String, text :: String } -> Element State
SurroundingPageLink = (extraLabel, classSuffix, maybeLink) => where(maybeLink) {
  Nothing =>
    <empty  />

  Just({ href }) =>
    <link className={stratum.e(classSuffix)} to={href}>
      {extraLabel}
    </link>
}

Content :: DocsPageWithLinks -> Element State
export Content = (document) =>
  <div className={stratum.e("")}>
    <div className={stratum.e("nav")}>
      {SurroundingPageLink("⦉", "previous", document.previousLink)}
      {SurroundingPageLink("⦊", "next", document.nextLink)}
      // {PrevPageLink("⦉", document.previousLink, document.nextLink)}
      // {NextPageLink("⦊", document.previousLink, document.nextLink)}
    </div>
    <div className={stratum.e("content")}>
      <h2 className={stratum.e("subheader")}>
        {document.title}
      </h2>
      {renderMarkdown(document.content)}
    </div>
  </div>
