import type { Element } from "MadUI"


import { Left, Right } from "Either"
import { parse } from "JsonParser"
import {} from "List"
import {trace} from "IO"

import { DEFAULT_CONFIG, renderWithConfig } from "MadUI"

import type { Content, State } from "@client/State"
import { DEFAULT_CONTENT, INITIAL_STATE, Loading, Transitioning } from "@client/State"
import { contentParser } from "@client/Parsers"
import json from "@client/content.json"
import { SplashScreen } from "@client/views/SplashScreen"



RenderPage :: (State -> Element State) -> State -> Element State
export RenderPage = (ToRender, state) => state.loadingState
  == Loading
  || state.loadingState
  == Transitioning
  ? SplashScreen(state.loadingState)
  : ToRender(state)


parseContent :: String -> Content
parseContent = pipe(
  parse(contentParser),
  trace("huhh"),
  where {
    Right(c) =>
      c
    Left(_) =>
      DEFAULT_CONTENT
  },
)


renderer :: (State -> Element State) -> {}
export renderer = (Renderable) => renderWithConfig(
  DEFAULT_CONFIG,
  RenderPage(Renderable),
  { ...INITIAL_STATE, content: parseContent(json) },
  "app",
)
