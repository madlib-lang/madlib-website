import type { Action } from "MadUI"
import type { State } from "@client/State"
import Math from "Math"
import { throttleAction, MouseEvent, onMouseMove, onMouseUp } from "MadUI"

VERTICAL_SPLIT_MIN_LEFT :: Integer
VERTICAL_SPLIT_MIN_LEFT = 200

handleDragOutput :: Action State
export handleDragOutput = throttleAction(
  40,
  (currentState, event) => if (currentState.playground.dragData.dragging) {
    where(event) {
      MouseEvent({ clientX }) =>
        [
          of(
            (state) => (
              {
                ...state,
                playground: {
                  ...state.playground,
                  dragData: {
                    ...state.playground.dragData,
                    outputEdge: Math.max(VERTICAL_SPLIT_MIN_LEFT, clientX - 40),
                    dragging: true,
                  },
                },
              }
            ),
          ),
        ]

      _ =>
        []
    }
  } else { [] },
)


handleDragOutputEnd :: Action State
export handleDragOutputEnd = (_, _) => [
  of(
    (state) => (
      {
        ...state,
        playground: {
          ...state.playground,
          dragData: {
            ...state.playground.dragData,
            dragging: false
          },
        },
      }
    ),
  ),
]
